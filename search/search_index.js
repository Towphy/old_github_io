var __index = {"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&[lg]t;","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Home","text":"<p>Welcome to the DynamicCrosshair documentation!</p> <p>DynamicCrosshair is a open-source Roblox module that has lots of customization and functionality. </p> <p>To get started with using DynamicCrosshair, visit Getting Started</p> <p> </p>"},{"location":"index.html#function-list","title":"Function List:","text":"Function Description <code>.New()</code> Create new DynamicCrosshair instance <code>:Enable()</code> Enable the Crosshair <code>:Disable()</code> Disable the Crosshair <code>:Lock()</code> Locks all Crosshair movement <code>:FollowMouse()</code> Crosshair follows mouse <code>:Hitmarker()</code> Hitmarker displays <code>:Size()</code> Changes size of Crosshair <code>:Destroy()</code> Destroy DynamicCrosshair instance <code>:Display()</code> Customize Crosshair apperance <code>:Set()</code> Set Crosshair radius <code>:SmoothSet()</code> Smoothly Set Crosshair radius <code>:Shove()</code> Shove crosshair radius <code>:Raycast()</code> Raycast inbetween crosshair"},{"location":"basic-usage.html","title":"Basic Usage","text":"<p>After following the steps in Getting Started, we can now implent it into our games!</p>"},{"location":"basic-usage.html#creating-a-dynamiccrosshair","title":"Creating a DynamicCrosshair","text":"Creating Crosshair<pre><code>local UI : ScreenGui = script.Parent \nlocal DynamicCrosshair = require(script.DynamicCrosshair).New(UI)\nDynamicCrosshair:Enable()\n-- DynamicCrosshair.New() takes 6 different arguments\n--[[ \nDynamicCrosshair.New(\n    Ui, MinSpread, MaxSpread, \n    DecreasePerSecond, IncreasePerSecond, Follow Mouse\n)\n]]--\n</code></pre> Warning <p>For the module to work, you must call the <code>DynamicCrosshair:Enable()</code> function</p>"},{"location":"basic-usage.html#crosshair-movement","title":"Crosshair Movement","text":"<p>DynamicCrosshair supports various ways to move our crosshair, lets see some of these ways:</p>"},{"location":"basic-usage.html#crosshair-set","title":"Crosshair Set","text":"CodeOutput Setting The Radius<pre><code>local UI : ScreenGui = ...\nlocal DynamicCrosshair = require(...).New(UI)\nDynamicCrosshair:Enable()\nDynamicCrosshair:Set(40)\nDynamicCrosshair:Set('60')\n</code></pre> <p>In this video, for example purposes the <code>:Set()</code> function is called 3 times with a radius parameter of 60 </p> <p>Note</p> <p>DynamicCrosshair's <code>:Set()</code> function has a very simular look to <code>:Shove()</code>, but they have different behaviors. </p> <p>If you want <code>:Set()</code> to permantly set the radius of the crosshair, look toward using <code>:Lock()</code> or set the radius minimum.</p>"},{"location":"basic-usage.html#crosshair-smooth-set","title":"Crosshair Smooth Set","text":"<p>DynamicCrosshair's SmoothSet() function uses Roblox's TweenService to tween the crosshair's radius to a final goal.</p> CodeOutput Setting The Radius<pre><code>local UI : ScreenGui = ...\nlocal DynamicCrosshair = require(...).New(UI)\nDynamicCrosshair:Enable()\n-- Set tweening style and direction\nDynamicCrosshair.EasingStyle = Enum.EasingStyle.Sine -- default: linear\nDynamicCrosshair.EasingDirection = Enum.EasingStyle.In -- default: InOut\n-- DynamicCrosshair:SmoothSet(Spread, Transition Seconds, Update Minimum Radius When Completed)\nDynamicCrosshair:SmoothSet(40, 1, false)\nDynamicCrosshair:SmoothSet(40, 1)\nDynamicCrosshair:SmoothSet(40, 1, nil)\n</code></pre> <p>In this video, for example purposes the <code>:Set()</code> function is called 3 times with a radius parameter of 60 </p>"},{"location":"basic-usage.html#crosshair-shove","title":"Crosshair Shove","text":"<p>Bug</p> <p>DynamicCrosshair's <code>:Shove()</code> is currently experiencing odd behaviors, should be fixed soon. It is suggested to use <code>:Set()</code> to replace <code>:Shove()</code> until it is fixed.  </p> <p>DynamicCrosshair crosshair shove will \"shove\" the crosshair's radius based on <code>Spreading.IncreasePerSecond</code></p> Shove Example<pre><code>local UI : ScreenGui = script.Parent \nlocal DynamicCrosshair = require(script.DynamicCrosshair).New(UI)\nDynamicCrosshair:Enable()\nDynamicCrosshair.Spreading.IncreasePerSecond = 30\nDynamicCrosshair:Shove()\n</code></pre>"},{"location":"basic-usage.html#crosshair-customization","title":"Crosshair Customization","text":"<p>If you are looking to customize the looks of the crosshair, please visit Display Customization</p>"},{"location":"basic-usage.html#follow-mouse","title":"Follow Mouse","text":"Follow Mouse Example<pre><code>local UI : ScreenGui = script.Parent \nlocal DynamicCrosshair = require(script.DynamicCrosshair).New(UI)\nDynamicCrosshair:Enable()\n-- DynamicCrosshair:FollowMouse(boolean)\nDynamicCrosshair:FollowMouse(true)\nDynamicCrosshair:FollowMouse(false)\n</code></pre>"},{"location":"basic-usage.html#lock-the-crosshair","title":"Lock The Crosshair","text":"<p>Locking the crosshair will lock out the crosshair's radius from decreasing at all, until enabled again.</p> Follow Mouse Example<pre><code>local UI : ScreenGui = script.Parent \nlocal DynamicCrosshair = require(script.DynamicCrosshair).New(UI)\nDynamicCrosshair:Enable()\n-- DynamicCrosshair:Lock(boolean)\nDynamicCrosshair:Lock() -- locked is true\nDynamicCrosshair:Lock(true) -- locked is true\nDynamicCrosshair:Lock(false) -- locked is false\n</code></pre>"},{"location":"basic-usage.html#next-steps","title":"Next Steps","text":"<p>Go Visit: Display Customization | Raycasting | Hitmarkers</p>"},{"location":"contact.html","title":"Contact","text":"<p>This module and website was designed by Towphy.</p>"},{"location":"contact.html#if-you-need-to-reach-out-please-refer-to-these-socials","title":"If you need to reach out please refer to these socials:","text":"<p>Hyperlinks: Twitter | Roblox | Devforum</p> <p>Discord:</p> <p><code>Towphy#6174</code> - Almost Always Active!</p>"},{"location":"customization.html","title":"Display Customization","text":"<p>You can almost fully customize your DynamicCrosshair looks with it's built-in functions!</p>"},{"location":"customization.html#change-the-size-of-the-crosshair","title":"Change The Size Of The Crosshair","text":"Change The Size<pre><code>local UI : ScreenGui = script.Parent \nlocal DynamicCrosshair = require(script.DynamicCrosshair).New(UI)\nDynamicCrosshair:Enable()\n-- DynamicCrosshair:Size(5,1)\nDynamicCrosshair:Size(5,1)\n</code></pre>"},{"location":"customization.html#change-the-display-of-the-crosshair","title":"Change The Display Of The Crosshair","text":"<p>You can change the display of the crosshair using any inherited property from a <code>ImageLabel</code>. You can do this by using DynamicCrosshair's built in <code>:Display()</code> function</p> Code ExampleOutput Display Example<pre><code>local UI : ScreenGui = script.Parent \nlocal DynamicCrosshair = require(script.DynamicCrosshair).New(UI)\nDynamicCrosshair:Enable()\nDynamicCrosshair:Display({\nBackgroundTransparency = 0; \nBorderSizePixel = 2;\nImage = nil;\nImageTransparency = 0;\nBackgroundColor3 = Color3.new(0.054902, 0.258824, 1);\n})\n</code></pre> <p></p>"},{"location":"getting-started.html","title":"Getting Started","text":""},{"location":"getting-started.html#installation","title":"Installation","text":"<p>You can install the Module off of Roblox: Download Here</p> <p>Once you install import it into Roblox Studio, It is suggested parenting it to Replicated Storage or under any local script</p>"},{"location":"getting-started.html#setting-up","title":"Setting Up","text":"<p>In a local script lets refrence the module:</p> Refrence DynamicCrosshair<pre><code>local UI : ScreenGui = \nlocal DynamicCrosshair = require(...).New(UI)\n</code></pre>"},{"location":"getting-started.html#next-steps","title":"Next Steps","text":"<p>Next steps are located at Basic Usage!</p>"},{"location":"hitmarkers.html","title":"Hitmarkers","text":"<p>Hitmarkers are a fairly easy to set up for your DynamicCrosshair! You are able to fully customize your hitmarker along with a headshot feature.</p>"},{"location":"hitmarkers.html#examples","title":"Examples","text":""},{"location":"hitmarkers.html#customization","title":"Customization","text":"Calling The Hitmarker Function<pre><code>local UI : ScreenGui = ...\nlocal DynamicCrosshair = require(...).New(UI)\nDynamicCrosshair:Enable()\n-- all customization settings:\nDynamicCrosshair.HitMarker.size = UDim2.fromOffset(50, 50) -- UDim2 Value\nDynamicCrosshair.HitMarker.default = Color3.fromRGB(255, 255, 255) -- Color3 Value\nDynamicCrosshair.HitMarker.headshot = Color3.fromRGB(255, 0, 0) -- Color3 Value\nDynamicCrosshair.HitMarker.fadeTime = 0.25 -- Number Value\nDynamicCrosshair.HitMarker.easingStyle = Enum.EasingStyle.Linear\nDynamicCrosshair.HitMarker.easingDirection = Enum.EasingDirection.InOut\n-- Change The Image:\nDynamicCrosshair.HitMarker.Image.default = 'rbxassetid://...'\nDynamicCrosshair.HitMarker.Image.headshot = 'rbxassetid://...'\n</code></pre> <p>Note</p> <p>If the <code>HitMarker.Image.headshot</code> value is left nil it will default to <code>HitMarker.Image.default</code></p>"},{"location":"hitmarkers.html#functionality","title":"Functionality","text":"<p>Lets now call the actual Hitmarker function. This function takes a <code>headshot</code> parameter. If the headshot image is not nil, the hitmarker will display the given image.</p> Calling The Hitmarker Function<pre><code>local UI : ScreenGui = ...\nlocal DynamicCrosshair = require(...).New(UI)\nDynamicCrosshair:Enable()\n--DyanmicCrosshair:Hitmarker( headshot : boolean )\n-- all the following functions will work:\nDynamicCrosshair:Hitmarker() -- headshot is false\nDyanmicCrosshair:Hitmarker(false) -- headshot is false\nDynamicCrosshair:Hitmarker(true) -- headshot is true\n</code></pre>"},{"location":"raycasting.html","title":"Raycasting","text":"<p>DynamicCrosshair uses Roblox's Raycasting to return a origin and direction from the camera to a random world position in between the crosshair.</p>"},{"location":"raycasting.html#code","title":"Code:","text":"Setting The Radius<pre><code>local UI : ScreenGui = ...\nlocal DynamicCrosshair = require(...).New(UI)\nDynamicCrosshair:Enable()\nlocal origin, direction = DynamicCrosshair:Raycast()\n</code></pre> <p>Note</p> <p>The raycast will always originate from the camera position, currently there is no way to change this. </p>"},{"location":"raycasting.html#example","title":"Example:","text":"Video ExampleCode <p>In this video, raycast are repeatly shot out creating a bullet tracing effect.  </p> <p>Note</p> <p>This is a <code>localscript</code> located under a <code>ScreenGui</code></p> Code Example<pre><code>local RunService = game:GetService('RunService')\nlocal UserInputService = game:GetService('UserInputService')\nUserInputService.MouseIconEnabled = false\nlocal UI = script.Parent\nlocal DynamicCrosshair = require(script:WaitForChild('DynamicCrosshair')).New(UI)\nlocal Player = game.Players.LocalPlayer\nlocal Mouse = Player:GetMouse()\nDynamicCrosshair:Enable()\nDynamicCrosshair:Max(120)\nDynamicCrosshair:Min(60)\nlocal function CreateBullet(ray, origin, direction)\nlocal intersection = ray and ray.Position or origin + direction\nlocal distance = (origin - intersection).Magnitude\nlocal bullet_clone = Instance.new(\"Part\")\nbullet_clone.Material = Enum.Material.Neon\nbullet_clone.Size = Vector3.new(0.1, 0.1, distance)\nbullet_clone.CFrame = CFrame.new(origin, intersection)*CFrame.new(0, 0, -distance/2)\nbullet_clone.Parent = game.Workspace.Bullets    \nbullet_clone.Anchored = true\nbullet_clone.CanCollide = false\nend\nlocal function Click()\n-- shove crosshair\nDynamicCrosshair:Shove()\n-- raycast\nlocal params = RaycastParams.new()\nparams.FilterType = Enum.RaycastFilterType.Blacklist\nparams.FilterDescendantsInstances = {Player.Character, workspace.Bullets, workspace.CurrentCamera}\nlocal origin, direction = DynamicCrosshair:Raycast()\nlocal ray = workspace:Raycast(workspace.CurrentCamera.CFrame.Position, direction*50000, params)\nCreateBullet(ray, origin, direction)    \nend\nRunService.RenderStepped:Connect(RenderStepped)\nMouse.Button1Down:Connect(Click)\n</code></pre>"}]}